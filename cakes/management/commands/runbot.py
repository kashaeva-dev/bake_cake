import logging.config

from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.types import WebAppInfo, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, \
    ReplyKeyboardRemove
from django.core.management import BaseCommand

import conf.settings as settings
from cakes.logger_config import logger_config

logger = logging.getLogger("bot_logger")

logging.config.dictConfig(logger_config)

storage = MemoryStorage()
bot = Bot(token=settings.TG_BOT_API, parse_mode=types.ParseMode.HTML)
dp = Dispatcher(bot, storage=storage)

web_app = WebAppInfo(url="https://kashaeva-dev.github.io/")

keyword = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üç∞ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ç–æ—Ä—Ç—ã", web_app=web_app)],
        [KeyboardButton(text="üõí –ò–∑ –º–æ–∏—Ö –∑–∞–∫–∞–∑–æ–≤", web_app=web_app)],
    ],
    resize_keyboard=True,
)

inline_keyboard = InlineKeyboardMarkup([
    [
        InlineKeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='main_menu'),
    ],
]
)

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await bot.send_message(message.from_user.id,
                           "–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å üéÇ<b>—Ç–æ—Ä—Ç</b> –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –æ–¥–∏–Ω –∏–∑ —Ä–∞–∑–¥–µ–ª–æ–≤ "
                           "–∫–∞—Ç–∞–ª–æ–≥–∞ –ø–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã ‚¨á. ",
                           reply_markup=keyword,
                           )


@dp.message_handler(content_types='web_app_data')
async def web_app_handler(web_app_message):
    logger.info(f"web_app_data: {web_app_message.web_app_data}")
    chat_id = web_app_message.chat.id
    await bot.send_message(chat_id,
                           f"–í—ã–±—Ä–∞–Ω —Ç–æ—Ä—Ç ‚Ññ{web_app_message.web_app_data.data}. ",
                           reply_markup=ReplyKeyboardRemove())
    await bot.send_message(chat_id,
                           f"–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é:",
                           reply_markup=inline_keyboard)

class Command(BaseCommand):
    def handle(self, *args, **options):
        executor.start_polling(dp, skip_updates=True)
